<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>

    <Product>DryIoc.SignalR</Product>
    <VersionPrefix>6.0.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>

    <NoWarn>$(NoWarn);NU1903</NoWarn>

    <AssemblyName>$(Product)</AssemblyName>
    <AssemblyTitle>$(Product) $(TargetFramework)</AssemblyTitle>

    <PackageId>$(Product).dll</PackageId>
    <Title>$(Product).dll</Title>
    <Description>DryIoc extension for ASP.NET SignalR</Description>
    <PackageTags>Web ASPNET SignalR Extension IoC Container Inversion-of-Control DI Dependency-Injection DRY DryIoc</PackageTags>
    <PackageReleaseNotes>
      <![CDATA[
## v6.0.0:
- Support for DryIoc v6

## v5.0.0:
- Support for DryIoc v5
- Upping the SignalR 2.4.3

## v4.1.0:
- added: DryIocHubDispatcher
- fixed: #292 Web Api SignalR. Cannot resolve hub instance on connection timeout.

## v4.0.0:
- added: Support for DryIoc v4

## v3.0.0:
- added: Support for DryIoc v3

## v2.1:
- changed: Reference to latest DryIoc 2.10

## v2.0.1:
- changed: Reference to latest DryIoc 2.8.3

## v2.0.0:
- changed: WithSignalR to not modify container and just register HubActivator, Hubs, and set GlobalHost.Resolver
- changed: HubActivator to just resolving the Hub without opening the scope
- add: Helper methods to RegisterHubs
]]>
    </PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNet.SignalR.Core" Version="2.4.3" />
    <PackageReference Include="Microsoft.Owin.Security" Version="4.2.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DryIoc\DryIoc.csproj" />
  </ItemGroup>
</Project>
